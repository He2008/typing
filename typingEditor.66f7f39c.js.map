{"version":3,"sources":["typingEditor/config.ts","typingEditor/utils.ts","typingEditor/view.ts","typingEditor/index.ts"],"names":[],"mappings":";;;;;AAAA,ACAA,IDAM,ACAA,IDAI,CCAC,EDCX,CCDc,mZDAd;AAcA,ACbG,EAAA,EDaG,EAAE,GACR,CCdW,EAAA,QADG,grBDcd;AAwBA,ACpCG,EAAA,KDoCH,CAAA,ECpCW,EAAA,GDoCX,GAAc,ECtCA;ADuCd,ACpCG,EDoCH,ACpCG,MAAM,CDoCF,CCpCE,CDoCD,EADM;AAEd,ACxCc,CAAd,CDwCA,IAAI,EAAA,IAFU;AAGd,ACnCA,EDmCA,EAAE,EAAA;AAHY,CAAd;AGtCA,ADCA,ICDA,ADCA,OAAA,CCDA,EDCA,CCDA,cDCA,CCDA,ADCA,CCDA,MDCA,CCDA,ADCA,CCDA,QDCA,CAAA,CCDA,ADCA,CCDA,CAAA;;AACA,ADCA,ICDA,ADCA,OCDA,EDCA,CCDA,eAAA,CAAA,OAAA,CAAA,SAAA,CAAA,CAAA;ADCA;ACAA,ADAA,ICAA,MAAA,EDAA,CCAA,OAAA,CAAA,QAAA,CAAA;AAEA,AFQA,ACLI,SDKK,ECLL,MDKJ,CAAkB,EAAlB,ACLI,CAAY,CDKiB,GCL7B,EAA0B,IDK9B,ACLI,EDK6C,ACLY;ADMzD,ACN0B,QAAA,CDMlB,GCNkB,CDMd,ICNc,EDMlB,CAAW,ECNO,CAAA,EAAA,ODMK,SAAZ,GAAwB,SAAnC,CAAD,CAAgD,IAAhD,CAAqD,EAAE,CAAC,SAAxD,CAAP;AACH,ACP6B,MAAA,IAAA,GAAA,SAAA;ADQ9B,ACR6D;;AAFzD,SAAA,QAAA,GAAoB,KAApB;ACGJ,ADAM,ICAN,KDAW,CCAX,GDAM,GAAY,IAAZ;ACAN,ADCM,SAAK,IAAL,GAAY,IAAZ;ACDN,ADEM,SAAK,GCFX,CDEM,GAAY,QAAQ,CAAC,aAAT,CAAuB,MAAvB,CAAZ;ACGJ,ADFI,SAAK,YAAL;ADSN,ACRM,SDQG,ACRE,QDQX,CAAkB,CCRZ,CDQN,ACRsB,EDQW,ECR3B,ODQN,EAAiD;AAC7C,ACRC,MDQE,QAAQ,CAAC,EAAD,EAAI,SAAJ,CAAX,EAA0B,OAAO,KAAP;AAC1B,EAAA,EAAE,CAAC,SAAH,IAAgB,MAAM,SAAtB;AACH,ACTG,EAAA,SAAA,CAAA,SAAA,CAAA,YAAA,GAAA,YAAA;ACIF,ADHI,QAAI,GCGR,CDHY,GAAG,ECGf,CAAY,EDHQ,ICGpB,ADHI,ECG4B;AANhC,AFaF,ACTM,SCJJ,AFaO,ACTE,IAAL,CCJJ,ADIc,CDShB,CAAgB,CEbI,CAAC,AFarB,CEboB,CFaW,CEbP,CAAJ,CAAlB,ADII,GAAsB,GDS5B,CCTM,CDSyC;AEN3C,AFOA,ACTC,GAHD,GDYG,GEPE,EAAL,GAAU,AFOC,CAAC,EAAD,EAAI,CEPC,CAAC,EAAjB,KFOW,CAAX,EAA0B;AEN1B,AFOI,IEPJ,IFOQ,GEPR,AFOW,CEPX,EFOc,IAAI,CEPlB,CAAM,IFOQ,CAAW,GEPzB,CAAe,KAAK,EAApB,CFOqC,CEPb,QFOC,GAAwB,EEPjD,OFOc,CAAV;AENJ,AFOI,ACVJ,EAAA,EDUI,EAAE,CAAC,EEPF,EDHL,CAAA,IDUI,GAAe,CEPnB,CFOqB,ACVrB,CDUsB,ACVtB,CCGmB,IAAI,IFOJ,CAAa,ACVhC,CCGuB,CAAA,CDHvB,GCGmB,CAAS,AFOT,CAAqB,GAArB,EEPe,AFOW,ACVlC,CCGwB,EFOhB,CAAf,ACVJ,CCGmB,CDHW,CCGW,SAAtB,CAAnB;AACA,AFOC,ACVG,QAAG,CCGF,IDHO,IAAL,CCGP,GAAiB,CDHI,GCGA,EDHjB,EAAwB,ECGP,CAAA,IAAJ,CAAS,MAAM,CAAC,IAAhB,EAAsB,OAAtB,CAAjB;AACA,AFOH,ACVK,SCGG,ADHE,ECGP,CAAQ,CDHN,CAAU,ICGZ,CAAe,IDHb,CCGkB,EDHI,SCGT,CAAiB,ADHA,ICGhC,ADHwB,ECGc,CDHF,GAAZ,CCGmB,GDHH,KAAK,CCGP,CAAe,IAArD,EDHwC,GAAgB,UAAhB,GAA6B,EAA7C,CAAtB;ACIF,ADHC,GAHD,MCMK,cAAL;AACD,AFMH,OAAA,CAAA,OAAA,GAAe,KAAf;AEJE,AFKF,ACVI,EAAA,IDUE,CAAC,ICVH,CDUJ,ACVI,GDUW,KAAf,CCVI,CAAA,YAAA,GAAA,UAAa,QAAb,EAA8B;AAC5B,SAAK,QAAL,GAAgB,QAAhB;;AACA,QAAI,KAAK,QAAT,EAAmB;AACjB,MAAA,OAAA,CAAA,OAAA,CAAM,QAAN,CAAe,KAAK,IAApB,EAA0B,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","file":"typingEditor.66f7f39c.js","sourceRoot":"../src","sourcesContent":["const java = \n`\npublic class StringCompareEmp{\n    public static void main(String args[]){\n       String str = \"Hello World\";\n       String anotherString = \"hello world\";\n       Object objStr = str;\n  \n       System.out.println( str.compareTo(anotherString) );\n       System.out.println( str.compareToIgnoreCase(anotherString) );\n       System.out.println( str.compareTo(objStr.toString()));\n    }\n }\n`\nconst js = \n`\ndocument.ready = function (callback) {\n    if (document.addEventListener) {\n        document.addEventListener('DOMContentLoaded', function () {\n            document.removeEventListener('DOMContentLoaded', arguments.callee, false);\n            callback();\n        }, false)\n    }\n    else if (document.attachEvent) {\n        document.attachEvent('onreadystatechange', function () {\n              if (document.readyState == \"complete\") {\n                        document.detachEvent(\"onreadystatechange\", arguments.callee);\n                        callback();\n               }\n        })\n    }\n    else if (document.lastChild == document.body) {\n        callback();\n    }\n}\n`\n\n\nexport default{\ncontent:js,\njava,\njs\n\n}\n","const utils = {\n   hasClass,\n   addClass,\n   remove\n}\n\n/**\n *@desc 判断是否有某个Class \n *@param {HTMLElement} el 元素\n *@param {string} className 类名\n *@return {boolean} \n */\nfunction hasClass(el:HTMLElement,className:string):boolean{\n    return (new RegExp('(\\\\s|^)' + className + '(\\\\s|$)')).test(el.className);\n}\n/**\n * @desc 添加Class\n * @param el 元素\n * @param className 类名 \n */\nfunction addClass(el:HTMLElement,className:string){\n    if(hasClass(el,className))return false;\n    el.className += ' ' + className;\n}\n\nfunction remove(el:HTMLElement,className:string){\n    if(hasClass(el,className)){\n        let reg = new RegExp('(\\\\s|^)' + className + '(\\\\s|$)');\n        el.className = el.className.replace(reg, ' ');\n    }\n}\nexport default utils\nwindow.utils = utils","\nimport Utils from './utils'\nexport class CharBlock {\n    char: string;\n    type: CharBlockType;\n    isActive: boolean = false;\n    html: HTMLElement;\n    constructor(char: string, type: CharBlockType = \"default\") {\n      this.char = char;\n      this.type = type;\n      this.html = document.createElement(\"span\");\n      this.initCharHtml();\n      this.changeType(type);\n    }\n    initCharHtml() {\n      let char = this.char;\n      this.html.innerHTML = char;\n    }\n    changeType(type: CharBlockType) {\n        if(this.type === 'end') return\n      this.html.className = `char ${type} ${this.isActive ? \"isActive\" : \"\"}`;\n    }\n    toggleActive(isActive: boolean) {\n      this.isActive = isActive;\n      if (this.isActive) {\n        Utils.addClass(this.html, \"isActive\");\n      } else {\n        Utils.remove(this.html, \"isActive\");\n      }\n    }\n  }\n  \n  export  class Line {\n    html: HTMLElement;\n    lineNo: number;\n    charList: CharBlock[] = [];\n    constructor(lineText: string[], type) {\n      this.initLine(lineText, type);\n    }\n    initLine(text: string[], type: String) {\n      this.html = document.createElement(\"p\");\n      Utils.addClass(this.html, \"line\");\n      text.forEach(char => {\n        let blockType: CharBlockType =\n          type === \"input\" ? \"transparent\" : \"default\";\n        if (char === \"indent\") {\n          blockType = \"indent\";\n          char = \"&nbsp\";\n        }else if(char ==='end'){\n          blockType = \"end\";\n          char = \"&nbsp\";\n        }\n        let charBlock = new CharBlock(char, blockType);\n        this.charList.push(charBlock);\n        this.html.append(charBlock.html);\n      });\n    }\n  }\n  \n  export   class View {\n    html: HTMLElement;\n    text: string;\n    lineList: Line[] = [];\n  \n    constructor(text: string, type: string) {\n      this.text = text;\n      this.html = document.createElement(\"div\");\n      Utils.addClass(this.html, type);\n      this.handleText(type);\n    }\n    handleText(type) {\n      let text = this.text;\n      let line = [];\n      let char: string;\n      let indent = true;\n      for (let i = 0; i < text.length; i++) {\n        char = text[i];\n        if (!char || char === \" \") {\n          char = indent ? \"indent\" : \"&nbsp;\";\n        } else if (char === \"\\r\\n\" || char === \"\\n\") {\n          let lineClass = new Line(line, type);\n          this.lineList.push(lineClass);\n          this.html.append(lineClass.html);\n          line = [];\n          indent = true;\n          continue;\n        } else {\n          indent = false;\n        }\n        line.push(char);\n      }\n      line.push('end')\n      let lineClass = new Line(line, type);\n      this.lineList.push(lineClass);\n      this.html.append(lineClass.html);\n    }\n  }\n  ","import C from \"./config\";\nimport Utils from \"./utils\";\nimport {View} from './view'\n\n/**\n * @desc Typing 类\n * @\n */\nclass Typing {\n  el: HTMLElement;\n  displayView: View;\n  inputView: View;\n  index: number[] = [0, 0];\n  /**\n   * 创建Typing实例\n   * @param config.text 文章内容\n   * @param config.el 挂载的htmlElement \n   */\n  constructor(config: TypingConfig) {\n    this.el = config.el;\n    Utils.addClass(this.el, \"screen-warp\");\n    this.displayView = new View(config.text, \"display\");\n    this.inputView = new View(config.text, \"input\");\n    this.el.append(this.displayView.html, this.inputView.html);\n    this.handleKeyEvent();\n  }\n\n  /**\n   * 监听键盘输入\n   */\n  handleKeyEvent() {\n    window.onkeydown = (event: any) => {\n      let code: Number = event.keyCode;\n      let key = event.key;\n      let lineIndex = () => this.index[1];\n      let charIndex = () => this.index[0];\n      let inputBlock = () =>\n        this.inputView.lineList[lineIndex()].charList[charIndex()];\n      let displayBlock = () =>\n        this.displayView.lineList[lineIndex()].charList[charIndex()];\n      // input text\n      if (\n        (code > 47 && code < 59) ||\n        (code > 64 && code < 91) ||\n        (code > 185 && code < 223) ||\n        code === 32\n      ) {\n        let type: wordBlockType = \"correct\";\n        if (key === \" \") key = \"&nbsp;\";\n        if (key !== displayBlock().char) type = \"error\";\n        displayBlock().changeType(\"transparent\");\n        inputBlock().changeType(type);\n        this.moveIndex(\"forward\");\n      }\n      // ENTER\n      if (code === 13) {\n        console.log(\"enter\");\n      }\n      // back\n      if (code === 8) {\n        console.log(this.inputView);\n        console.log(\"back\", this.index);\n        this.moveIndex(\"back\");\n        displayBlock().changeType(\"default\");\n        inputBlock().changeType(\"transparent\");\n      }\n    };\n  }\n  /**\n   * 移动光标\n   * @param type 移动方向\n   */\n  moveIndex(type: string) {\n    let lineIndex = this.index[1];\n    let charIndex = this.index[0];\n    let line = () => {\n      return this.displayView.lineList[this.index[1]];\n    };\n    let char = () => {\n      return line().charList[this.index[0]];\n    };\n    char().toggleActive(false);\n\n    if (type === \"forward\") {\n        if(checkEnd(this.displayView)) return;\n      if (charIndex >= line().charList.length - 1) {\n        this.index[0] = 0;\n        this.index[1]++;\n      } else {\n        this.index[0]++;\n      }\n    } else if (type === \"back\") {\n        if(checkStart(this.displayView)) return;\n      if (charIndex > 0 && char().type !== \"indent\") {\n        this.index[0]--;\n      } else {\n        this.index[1]--;\n        this.index[0] = line().charList.length - 1;\n      }\n    }\n    char().toggleActive(true);\n    if (char().type === \"indent\") this.moveIndex(type);\n\n    function checkEnd(view: View) {\n      return (\n        lineIndex === view.lineList.length - 1 &&\n        line().charList.length - 1 === charIndex\n      );\n    }\n    function checkStart(view: View) {\n      return lineIndex === 0 && charIndex === 0;\n    }\n  }\n}\n\n// 主函数\nfunction __main__() {\n  let config: TypingConfig = {\n    el: document.getElementById(\"typing\"),\n    text: C.content.trim()\n  };\n  let typing = new Typing(config);\n}\n\nwindow.onload = function() {\n  console.log(\"load\");\n  __main__();\n};\n"]}