{"version":3,"sources":["index.ts"],"names":[],"mappings":"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","file":"typing.859d5099.js","sourceRoot":"..","sourcesContent":["type wordBlockType = \"default\" | \"typed\" | \"error\" | \"correct\";\nconst testContent = `document.ready = function (callback) {\n    if (document.addEventListener) {\n        document.addEventListener('DOMContentLoaded', function () {\n            document.removeEventListener('DOMContentLoaded', arguments.callee, false);\n            callback();\n        }, false)\n    }\n    else if (document.attachEvent) {\n        document.attachEvent('onreadystatechange', function () {\n              if (document.readyState == \"complete\") {\n                        document.detachEvent(\"onreadystatechange\", arguments.callee);\n                        callback();\n               }\n        })\n    }\n    else if (document.lastChild == document.body) {\n        callback();\n    }\n}`;\nclass WordBlock {\n  word: String;\n  index: Number;\n  type: wordBlockType;\n  html: HTMLElement;\n  constructor(word: string, type: wordBlockType = \"default\", index: Number) {\n    this.word = word;\n    this.type = type;\n    this.index = index;\n    this.html = document.createElement(\"span\");\n    if (!word || word === \" \") {\n      this.word = \"&nbsp;\";\n      this.html.innerHTML = \"&nbsp\";\n    } else if (word === \"\\r\\n\" || word === \"\\n\") {\n      this.html = document.createElement(\"br\");\n      this.word = \"<br>\";\n      console.log(\"换行\");\n    } else {\n      this.html.innerText = word;\n    }\n    this.changeType(type);\n  }\n  /**\n   * changeType\n   */\n  public changeType(type: wordBlockType) {\n    this.html.appendChild;\n    this.html.className = `word ${type}`;\n  }\n  toggleActive() {\n    let className = this.html.className.split(\" \")\n    if(className.find((item)=>item === 'active')){\n\n    }\n    let isActive = className.findIndex(item=>item === 'active')\n  \n    if(isActive === -1){\n      className.push('active')\n    }else{\n      className.splice(isActive,1)\n    }\n    this.html.className = className.join(\" \")\n  }\n}\n\nclass Input {\n  el: HTMLElement;\n  words: Array<WordBlock> = [];\n  index: number = 0;\n  oldIndex = NaN;\n  constructor(el: HTMLElement) {\n    this.el = el;\n  }\n\n  addWord(char: string, type: wordBlockType, index) {\n    let word = new WordBlock(char, type, index);\n    this.el.appendChild(word.html);\n    this.words.push(word);\n    this.changeIndex(this.index + 1, this.index);\n  }\n  deleteWord() {\n    if (this.index <= 0) {\n      this.changeIndex(0, NaN);\n      return false;\n    }\n    let word = this.words[this.words.length - 1];\n    word.html.remove();\n    this.words.pop();\n    this.changeIndex(this.index - 1, this.index);\n  }\n  changeIndex(index: number, oldIndex: number) {\n    this.index = index;\n    this.oldIndex = oldIndex;\n    // this.showIndex();\n  }\n  showIndex() {\n    this.words[this.oldIndex].toggleActive();\n    this.words[this.index].toggleActive()\n  }\n}\n\n/**\n * TODO:\n * 输入Text Format\n * 高亮>\n */\nclass Typing {\n  content: Array<string>;\n  articleWords: Array<WordBlock> = [];\n  screen: HTMLElement;\n  input: Input;\n  constructor(screen: HTMLElement, content: string) {\n    this.content = content.split(\"\");\n    this.screen = screen;\n    this.init();\n  }\n  init() {\n    this.displayArticle();\n    this.listenKeyborad();\n    this.input = new Input(document.getElementById(\"input\"));\n  }\n  displayArticle() {\n    for (let i = 0; i < this.content.length; i++) {\n      let word = new WordBlock(this.content[i], \"default\", i);\n      this.articleWords.push(word);\n      this.screen.appendChild(word.html);\n      Window[`test${i}`] = word;\n    }\n  }\n  changeArticleWord(index, type: wordBlockType) {\n    this.articleWords[index].changeType(type);\n  }\n  listenKeyborad() {\n    window.onkeydown = (event: any) => {\n      let code: Number = event.keyCode;\n      let key = event.key;\n      let index = this.input.index;\n      // input text\n      if (\n        (code > 47 && code < 59) ||\n        (code > 64 && code < 91) ||\n        (code > 185 && code < 223) ||\n        code === 32\n      ) {\n        if (this.articleWords[index].word === \"<br>\") {\n          this.handleBr(index);\n          return;\n        }\n        let type: wordBlockType = \"correct\";\n        if (key !== this.content[index]) type = \"error\";\n        this.changeArticleWord(index, \"typed\");\n        this.input.addWord(event.key, type, index);\n      }\n      // ENTER\n      if (code === 13) {\n        console.log(\"enter\");\n      }\n      if (code === 8) {\n        console.log(\"back\", index);\n        this.changeArticleWord(index - 1, \"default\");\n        this.input.deleteWord();\n      }\n    };\n  }\n  handleBr(index: number) {\n    let i = index;\n    this.input.addWord(\"\\n\", \"typed\", index);\n    i++;\n    let articleChar = this.articleWords[i];\n    do {\n      this.input.addWord(\" \", \"typed\", index);\n      articleChar = this.articleWords[++i];\n    } while (articleChar.word === \"&nbsp;\");\n  }\n}\n\nclass Editor {\n  content: string;\n  input: string;\n}\n\nfunction __main__() {\n  let article = new Typing(document.getElementById(\"article\"), testContent);\n}\n\nwindow.onload = function() {\n  __main__();\n  // document.getElementById('btn').addEventListener('click',a)\n};\nfunction a() {\n  let code1 = document.getElementById(\"code\");\n  console.log(code1.value);\n  let strContent = code1.value;\n  document.getElementById(\"set\").innerHTML = strContent;\n  let article = new Typing(document.getElementById(\"article\"), strContent);\n}\n"]}