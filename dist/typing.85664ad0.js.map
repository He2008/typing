{"version":3,"sources":["index.ts"],"names":[],"mappings":";AACA,IAAM,EAAc,wrBAmBpB,EAAA,WAKE,SAAA,EAAY,EAAc,EAAiC,QAAjC,IAAA,IAAA,EAAA,WACnB,KAAA,KAAO,EACP,KAAA,KAAO,EACP,KAAA,MAAQ,EACR,KAAA,KAAO,SAAS,cAAc,QAC9B,KAAA,KAAK,UAAY,EACjB,KAAA,WAAW,GASpB,OAJS,EAAA,UAAA,WAAP,SAAkB,GACX,KAAA,KAAK,YACL,KAAA,KAAK,UAAY,QAAQ,GAElC,EApBA,GAsBA,EAAA,WAII,SAAA,EAAY,GAFZ,KAAA,MAAyB,GACzB,KAAA,MAAgB,EAEP,KAAA,GAAK,EAkBlB,OAhBI,EAAA,UAAA,QAAA,SAAQ,EAAY,EAAmB,GAC/B,IAAA,EAAO,IAAI,EAAU,EAAK,EAAK,GAC9B,KAAA,GAAG,YAAY,EAAK,MACpB,KAAA,MAAM,KAAK,GACX,KAAA,SAET,EAAA,UAAA,WAAA,WACO,GAAA,KAAK,OAAO,EAEJ,OADF,KAAA,MAAO,GACL,EAEA,KAAK,MAAM,KAAK,MAAM,OAAO,GACnC,KAAK,SACL,KAAA,MAAM,MACN,KAAA,SAEb,EAvBA,GA6BA,EAAA,WAKE,SAAA,EAAY,EAAqB,GAHjC,KAAA,aAA8B,GAIvB,KAAA,QAAU,EACV,KAAA,OAAS,EACT,KAAA,OAiDT,OA/CE,EAAA,UAAA,KAAA,WACO,KAAA,iBACA,KAAA,iBACA,KAAA,MAAQ,IAAI,EAAM,SAAS,eAAe,WAEjD,EAAA,UAAA,eAAA,WACO,IAAA,IAAI,EAAI,EAAG,EAAI,KAAK,QAAQ,OAAQ,IAAK,CACxC,IAAA,EAAO,IAAI,EAAU,KAAK,QAAQ,GAAI,UAAW,GAChD,KAAA,aAAa,KAAK,GAClB,KAAA,OAAO,YAAY,EAAK,MAC7B,OAAO,OAAO,GAAO,IAGzB,EAAA,UAAA,kBAAA,SAAkB,EAAM,GACjB,KAAA,aAAa,GAAO,WAAW,IAEtC,EAAA,UAAA,eAAA,WAAA,IAAA,EAAA,KACE,OAAO,UAAY,SAAC,GACd,IAAA,EAAe,EAAM,QACrB,EAAM,EAAM,IACZ,EAAQ,EAAK,MAAM,MAIlB,GAAA,EAAO,IAAM,EAAO,IAAQ,EAAO,KAAO,EAAO,KAAe,KAAT,EAAa,CACvE,QAAQ,IAAI,EAAM,KACd,IAAA,EAAqB,UACtB,IAAQ,EAAK,QAAQ,KAAQ,EAAM,SACtC,EAAK,kBAAkB,EAAM,SAC7B,EAAK,MAAM,QAAQ,EAAM,IAAI,EAAK,GAGvB,KAAT,GACF,QAAQ,IAAI,SAOD,IAAT,IACF,QAAQ,IAAI,OAAO,GACnB,EAAK,kBAAkB,EAAM,EAAE,WAC/B,EAAK,MAAM,gBAInB,EAzDA,GA2DA,EAAA,WAGA,OAHA,aAAA,GAKA,SAAS,IACO,IAAI,EAAO,SAAS,eAAe,WAAY,GAG/D,OAAO,OAAS,WACd","file":"typing.85664ad0.js","sourceRoot":"..","sourcesContent":["type wordBlockType = \"default\" | \"typed\" | \"error\" | \"correct\";\nconst testContent = `document.ready = function (callback) {\n    if (document.addEventListener) {\n        document.addEventListener('DOMContentLoaded', function () {\n            document.removeEventListener('DOMContentLoaded', arguments.callee, false);\n            callback();\n        }, false)\n    }\n    else if (document.attachEvent) {\n        document.attachEvent('onreadystatechange', function () {\n              if (document.readyState == \"complete\") {\n                        document.detachEvent(\"onreadystatechange\", arguments.callee);\n                        callback();\n               }\n        })\n    }\n    else if (document.lastChild == document.body) {\n        callback();\n    }\n}`;\nclass WordBlock {\n  word: String;\n  index: Number;\n  type: wordBlockType;\n  html: HTMLElement;\n  constructor(word: string, type: wordBlockType = \"default\", index: Number) {\n    this.word = word;\n    this.type = type;\n    this.index = index;\n    this.html = document.createElement(\"span\");\n    this.html.innerText = word;\n    this.changeType(type);\n  }\n  /**\n   * changeType\n   */\n  public changeType(type: wordBlockType) {\n    this.html.appendChild;\n    this.html.className = `word ${type}`;\n  }\n}\n\nclass Input{\n    el:HTMLElement;\n    words:Array<WordBlock> = [];\n    index: number = 0;\n    constructor(el:HTMLElement){\n        this.el = el;\n    }\n    addWord(char:string,type:wordBlockType,index){\n        let word = new WordBlock(char,type,index);\n        this.el.appendChild(word.html)\n        this.words.push(word)\n        this.index++\n    }\n    deleteWord(){\n        if(this.index<=0){\n            this.index =0;\n            return false\n        }\n        let word = this.words[this.words.length-1]\n        word.html.remove();\n        this.words.pop();\n        this.index--;\n    }\n}\n/**\n * TODO:\n * 输入Text Format\n * 高亮>\n */\nclass Typing {\n  content: string;\n  articleWords:Array<WordBlock>=[];\n  screen: HTMLElement;\n  input: Input;\n  constructor(screen: HTMLElement, content: string) {\n    this.content = content;\n    this.screen = screen;\n    this.init();\n  }\n  init() {\n    this.displayArticle();\n    this.listenKeyborad();\n    this.input = new Input(document.getElementById('input'))\n  }\n  displayArticle() {\n    for (let i = 0; i < this.content.length; i++) {\n      let word = new WordBlock(this.content[i], \"default\", i);\n      this.articleWords.push(word)\n      this.screen.appendChild(word.html);\n      Window[`test${i}`] = word;\n    }\n  }\n  changeArticleWord(index,type:wordBlockType){\n    this.articleWords[index].changeType(type);\n  }\n  listenKeyborad() {\n    window.onkeydown = (event: any)=> {\n      let code: Number = event.keyCode;\n      let key = event.key;\n      let index = this.input.index;\n\n      // console.log(event.keyCode)\n      // input text\n      if ((code > 64 && code < 91) || (code > 185 && code < 223)||code === 32) {\n        console.log(event.key);\n        let type:wordBlockType = 'correct'\n        if(key !== this.content[index]) type ='error'\n        this.changeArticleWord(index,'typed')\n        this.input.addWord(event.key,type,index)\n      }\n      // ENTER\n      if (code === 13) {\n        console.log(\"enter\");\n      }\n      // spacebar\n    //   if (code === 32) {\n    //     console.log(\"spacebar\");\n    //   }\n    //   back\n      if (code === 8) {\n        console.log(\"back\",index);\n        this.changeArticleWord(index-1,'default')\n        this.input.deleteWord()\n      }\n    };\n  }\n}\n\nclass Editor {\n  content: string;\n  input: string;\n}\n\nfunction __main__() {\n  let article = new Typing(document.getElementById(\"article\"), testContent);\n}\n\nwindow.onload = function() {\n  __main__();\n};\n"]}